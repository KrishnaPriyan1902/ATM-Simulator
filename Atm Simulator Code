import java.util.Scanner;

public class ATMSimulator {
    private String accountNumber;
    private String pin;
    private double savingsBalance;
    private double currentBalance;


    public ATMSimulator(String accountNumber, String pin, double initialSavings, double initialCurrent) {
        this.accountNumber = accountNumber;
        this.pin = pin;
        this.savingsBalance = initialSavings;
        this.currentBalance = initialCurrent;
    }


    public boolean authenticate(String enteredPin) {
        return this.pin.equals(enteredPin);
    }

    public double getBalance(String accountType) {
        return accountType.equals("savings") ? savingsBalance : currentBalance;
    }


    public void deposit(String accountType, double amount) {
        if (amount > 0) {
            if (accountType.equals("savings")) {
                savingsBalance += amount;
            } else {
                currentBalance += amount;
            }
            System.out.println("Successfully deposited: ₹" + amount);
        } else {
            System.out.println("Deposit amount must be positive!");
        }
    }


    public boolean withdraw(String accountType, double amount) {
        if (amount > 0) {
            if (accountType.equals("savings") && amount <= savingsBalance) {
                savingsBalance -= amount;
                System.out.println("Successfully withdrew: ₹" + amount);
                return true;
            } else if (accountType.equals("current") && amount <= currentBalance) {
                currentBalance -= amount;
                System.out.println("Successfully withdrew: ₹" + amount);
                return true;
            } else {
                System.out.println("Insufficient funds or invalid amount!");
            }
        }
        return false;
    }

    public void showMenu(String language) {
        Scanner scanner = new Scanner(System.in);
        int choice;

        String[] menuOptions = language.equals("1") ?
                new String[]{"Check Balance", "Deposit Money", "Withdraw Money", "Cancel"} :
                new String[]{"Consultar saldo", "Depositar dinero", "Retirar dinero", "Cancelar"};

        do {
            System.out.println("\n--- ATM Menu ---");
            for (int i = 0; i < menuOptions.length; i++) {
                System.out.println((i + 1) + ". " + menuOptions[i]);
            }
            System.out.print("Select an option: ");
            choice = scanner.nextInt();

         
            handleUserChoice(choice, scanner, language);
        } while (choice != 4);

  
    }


    private void handleUserChoice(int choice, Scanner scanner, String language) {
        switch (choice) {
            case 1:
                checkBalance(scanner, language);
                break;
            case 2:
                depositMoney(scanner, language);
                break;
            case 3:
                withdrawMoney(scanner, language);
                break;
            case 4:
                System.out.println(language.equals("1") ? "Transaction canceled. Thank you!" : "Transacción cancelada. ¡Gracias!");
                break;
            default:
                System.out.println(language.equals("1") ? "Invalid option. Please try again." : "Opción inválida. Por favor, inténtelo de nuevo.");
        }
    }

    private void checkBalance(Scanner scanner, String language) {
        System.out.println(language.equals("1") ? "Select account type:" : "Seleccione el tipo de cuenta:");
        System.out.println("1. Savings Account");
        System.out.println("2. Current Account");
        System.out.print("Enter your choice (1 or 2): ");
        int accountChoice = scanner.nextInt();

        String accountType = (accountChoice == 1) ? "savings" : "current";
        double balance = getBalance(accountType);
        System.out.println("Current Balance in " + accountType + " account: ₹" + balance);
    }


    private void depositMoney(Scanner scanner, String language) {
        System.out.println(language.equals("1") ? "Select account type:" : "Seleccione el tipo de cuenta:");
        System.out.println("1. Savings Account");
        System.out.println("2. Current Account");
        System.out.print("Enter your choice (1 or 2): ");
        int accountChoice = scanner.nextInt();

        String accountType = (accountChoice == 1) ? "savings" : "current";
        System.out.print("Enter amount to deposit: ₹");
        double depositAmount = scanner.nextDouble();
        deposit(accountType, depositAmount);
    }


    private void withdrawMoney(Scanner scanner, String language) {
        System.out.println(language.equals("1") ? "Select account type:" : "Seleccione el tipo de cuenta:");
        System.out.println("1. Savings Account");
        System.out.println("2. Current Account");
        System.out.print("Enter your choice (1 or 2): ");
        int accountChoice = scanner.nextInt();

        String accountType = (accountChoice == 1) ? "savings" : "current";
        System.out.print("Enter amount to withdraw: ₹");
        double withdrawAmount = scanner.nextDouble();
        withdraw(accountType, withdrawAmount);
    }

    public void displayWelcomeMessage() {
        System.out.println("Welcome to the ATM Simulator!");
        System.out.println("Please select your language:");
    }

    
    public String promptLanguageSelection(Scanner scanner) {
        System.out.println("1. English");
        System.out.println("2. Español");
        System.out.print("Enter your choice (1 or 2): ");
        return scanner.nextLine();
    }

    public String promptForPin(Scanner scanner) {
        System.out.print("Enter your PIN: ");
        return scanner.nextLine();
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        ATMSimulator atmSimulator = new ATMSimulator("123456", "1234", 1000.00, 2000.00);

        atmSimulator.displayWelcomeMessage();

        String languageChoice = atmSimulator.promptLanguageSelection(scanner);

        String enteredPin = atmSimulator.promptForPin(scanner);

        if (atmSimulator.authenticate(enteredPin)) {
            atmSimulator.showMenu(languageChoice);
        } else {
            System.out.println("Invalid PIN. Access denied.");
        }

    }
}
